{"version":3,"sources":["Serachbox.js","Card.js","Cardlist.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbox","searchchange","className","type","placeholder","onChange","Card","props","src","id","name","email","Cardlist","robots","cardarray","map","user","i","Scroll","style","overflowY","border","height","children","App","onsearch","event","setState","searchfield","target","value","state","fetch","then","response","json","this","filteredrobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAWeA,EATG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKC,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCC,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,OCUrGK,EAbF,SAACC,GACV,OACI,sBAAKL,UAAU,sDAAf,UACI,qBAAKM,IAAG,+BAA0BD,EAAME,GAAhC,cACR,gCACI,6BAAKF,EAAMG,OACX,4BAAIH,EAAMI,eCUXC,EAbE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAETC,EAAYD,EAAOE,KAAI,SAACC,EAAOC,GACjC,OAAO,cAAC,EAAD,CAAcR,GAAII,EAAOI,GAAGR,GAAIC,KAAMG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA5DM,MAGtB,OACI,8BACKH,KCFEI,G,MATA,SAACX,GACZ,OAEI,qBAAKY,MAAO,CAACC,UAAU,SAAWC,OAAO,kBAAoBC,OAAO,SAApE,SACKf,EAAMgB,aCgDJC,E,kDA/CX,aAAc,IAAD,8BACT,gBAeJC,SAAW,SAACC,GACR,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAf1C,EAAKC,MAAM,CACPlB,OAAO,GACPe,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OAEfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjB,GAAI,OAAI,EAAKW,SAAS,CAAEd,OAAQG,S,oBAS1C,WACI,MAA+BoB,KAAKL,MAA7BlB,EAAP,EAAOA,OAASe,EAAhB,EAAgBA,YACVS,EAAiBxB,EAAOyB,QAAO,SAACC,GAClC,OAAOA,EAAM7B,KAAK8B,cAAcC,SAASb,EAAYY,kBAGzD,OAAmB,IAAhB3B,EAAO6B,OACC,oBAAIxC,UAAU,KAAd,qBAIH,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcmC,KAAKX,WAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUZ,OAAQwB,a,GArCxBM,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMlCX,M","file":"static/js/main.4bf34edd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Searchbox = ({searchchange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search robots' onChange={searchchange} />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib pa4 br3 ma3 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${props.id}?200*200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\n\r\nconst Cardlist = ({robots}) => {\r\n\r\n    const cardarray = robots.map((user , i)=>{\r\n        return(<Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />)\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {cardarray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import react from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n\r\n        <div style={{overflowY:'scroll' , border:'4px solid black' , height:'600px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport Searchbox from \"./Serachbox\";\r\nimport Cardlist from \"./Cardlist\";\r\nimport './App.css';\r\nimport Scroll from \"./Scroll\";\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(user => this.setState({ robots: user }));\r\n                    \r\n    }\r\n\r\n    onsearch = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n    \r\n\r\n    render(){\r\n        const {robots , searchfield} = this.state;\r\n        const filteredrobots = robots.filter((robot)=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        });\r\n\r\n        if(robots.length===0){\r\n            return(<h1 className='tc'>LOADING</h1>)\r\n        }\r\n        else{\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>ROBOFRIENDS</h1>\r\n                    <Searchbox searchchange={this.onsearch} />\r\n                    <Scroll>\r\n                        <Cardlist robots={filteredrobots} />\r\n                    </Scroll>    \r\n                </div>    \r\n            );\r\n    \r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\"\n\n\n\nReactDOM.render(\n  <App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}